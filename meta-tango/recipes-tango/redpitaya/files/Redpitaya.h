/*----- PROTECTED REGION ID(Redpitaya.h) ENABLED START -----*/
//=============================================================================
//
// file :        Redpitaya.h
//
// description : Include file for the Redpitaya class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef Redpitaya_H
#define Redpitaya_H

#include <tango.h>
#include "rp.h"
#include "main_osc.h"
#include "version.h"
/*----- PROTECTED REGION END -----*/	//	Redpitaya.h

/**
 *  Redpitaya class description:
 *    
 */

namespace Redpitaya_ns
{
/*----- PROTECTED REGION ID(Redpitaya::Additional Class Declarations) ENABLED START -----*/

//	Additional Class Declarations

/*----- PROTECTED REGION END -----*/	//	Redpitaya::Additional Class Declarations

class Redpitaya : public TANGO_BASE_CLASS
{

/*----- PROTECTED REGION ID(Redpitaya::Data Members) ENABLED START -----*/

//	Add your own data members
/* Filter parameters */
float t_params[PARAMS_NUM] = { 0, 1e6, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0 };

/*----- PROTECTED REGION END -----*/	//	Redpitaya::Data Members


//	Attribute data members
public:
	Tango::DevDouble	*attr_Signal0_read;
	Tango::DevDouble	*attr_Signal1_read;

//	Constructors and destructors
public:
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	Redpitaya(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	Redpitaya(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	Redpitaya(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The device object destructor.
	 */	
	~Redpitaya() {delete_device();};


//	Miscellaneous methods
public:
	/*
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/*
	 *	Initialize the device
	 */
	virtual void init_device();
	/*
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();


//	Attribute methods
public:
	//--------------------------------------------------------
	/*
	 *	Method      : Redpitaya::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	//--------------------------------------------------------
	virtual void read_attr_hardware(vector<long> &attr_list);
	//--------------------------------------------------------
	/*
	 *	Method      : Redpitaya::write_attr_hardware()
	 *	Description : Hardware writing for attributes.
	 */
	//--------------------------------------------------------
	virtual void write_attr_hardware(vector<long> &attr_list);

/**
 *	Attribute Led0 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void write_Led0(Tango::WAttribute &attr);
	virtual bool is_Led0_allowed(Tango::AttReqType type);
/**
 *	Attribute Led1 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void write_Led1(Tango::WAttribute &attr);
	virtual bool is_Led1_allowed(Tango::AttReqType type);
/**
 *	Attribute Led2 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void write_Led2(Tango::WAttribute &attr);
	virtual bool is_Led2_allowed(Tango::AttReqType type);
/**
 *	Attribute Led3 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void write_Led3(Tango::WAttribute &attr);
	virtual bool is_Led3_allowed(Tango::AttReqType type);
/**
 *	Attribute Led4 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void write_Led4(Tango::WAttribute &attr);
	virtual bool is_Led4_allowed(Tango::AttReqType type);
/**
 *	Attribute Led5 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void write_Led5(Tango::WAttribute &attr);
	virtual bool is_Led5_allowed(Tango::AttReqType type);
/**
 *	Attribute Led6 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void write_Led6(Tango::WAttribute &attr);
	virtual bool is_Led6_allowed(Tango::AttReqType type);
/**
 *	Attribute Led7 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
	virtual void write_Led7(Tango::WAttribute &attr);
	virtual bool is_Led7_allowed(Tango::AttReqType type);
/**
 *	Attribute Signal0 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 16384
 */
	virtual void read_Signal0(Tango::Attribute &attr);
	virtual bool is_Signal0_allowed(Tango::AttReqType type);
/**
 *	Attribute Signal1 related methods
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Spectrum max = 16384
 */
	virtual void read_Signal1(Tango::Attribute &attr);
	virtual bool is_Signal1_allowed(Tango::AttReqType type);


	//--------------------------------------------------------
	/**
	 *	Method      : Redpitaya::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_attributes();



//	Command related methods
public:
	/**
	 *	Command Decimation related method
	 *	Description: 
	 *
	 *	@param argin decimation factor, legal values: 0--5
	 *               1, 8, 64, 1024, 8192, 65536
	 */
	virtual void decimation(Tango::DevShort argin);
	virtual bool is_Decimation_allowed(const CORBA::Any &any);


	//--------------------------------------------------------
	/**
	 *	Method      : Redpitaya::add_dynamic_commands()
	 *	Description : Add dynamic commands if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_commands();

/*----- PROTECTED REGION ID(Redpitaya::Additional Method prototypes) ENABLED START -----*/

//	Additional Method prototypes

/*----- PROTECTED REGION END -----*/	//	Redpitaya::Additional Method prototypes
};

/*----- PROTECTED REGION ID(Redpitaya::Additional Classes Definitions) ENABLED START -----*/

//	Additional Classes Definitions

/*----- PROTECTED REGION END -----*/	//	Redpitaya::Additional Classes Definitions

}	//	End of namespace

#endif   //	Redpitaya_H
